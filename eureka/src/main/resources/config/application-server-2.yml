#为什么要用yml文件？而不是xml或properties文件？
#说明:xml或properties文件都是以标签来配置数据，这样就造成了资源的浪费，不利于我们开发大型项目，而yml(yaml)文件则取消了这样的配置，文件中都是以数据为中心，层级结构以空格作为层级分隔符。使数据得到突出，简化了开发，同时占用的资源也更少。

spring:
  application:
    name: eureka-server

server:
  port: 8762

eureka:
  server:
    # 默认30s. eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，
    # 这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上
    response-cache-update-interval-ms: 3000
    # 默认60s. 启用主动失效，并且每次主动失效检测间隔为5s.
    eviction-interval-timer-in-ms: 5000
    enable-self-preservation: true # 默认为true，设为false，关闭自我保护
    #Eureka Server 在运行期间会去统计心跳失败比例在 15 分钟之内是否低于 85%
    renewal-percent-threshold: 0.49 # 默认是0.85，本地单机测试设为0.49
  instance:
    # 默认90s. 服务过期时间配置,超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除.
    # 注意，EurekaServer一定要设置eureka.server.eviction-interval-timer-in-ms否则这个配置无效，这个配置一般为服务刷新时间配置的三倍
    lease-expiration-duration-in-seconds: 15
    # 默认30s. 服务刷新时间配置，每隔这个时间会主动心跳一次
    lease-renewal-interval-in-seconds: 5
    hostname: eureka-server-2
  client:
#    registerWithEureka: false #禁止向eureka注册服务，因为它自己本身就是服务器
#    fetchRegistry: false #不需要抓取注册表
    serviceUrl:
      defaultZone: http://eureka-server-1:8761/eureka/,http://eureka-server-3:8763/eureka/
